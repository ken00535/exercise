// Code generated by MockGen. DO NOT EDIT.
// Source: ../../entity/repository_cache.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	entity "shorten/internal/app/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositoryCache is a mock of RepositoryCache interface.
type MockRepositoryCache struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryCacheMockRecorder
}

// MockRepositoryCacheMockRecorder is the mock recorder for MockRepositoryCache.
type MockRepositoryCacheMockRecorder struct {
	mock *MockRepositoryCache
}

// NewMockRepositoryCache creates a new mock instance.
func NewMockRepositoryCache(ctrl *gomock.Controller) *MockRepositoryCache {
	mock := &MockRepositoryCache{ctrl: ctrl}
	mock.recorder = &MockRepositoryCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryCache) EXPECT() *MockRepositoryCacheMockRecorder {
	return m.recorder
}

// GetUrl mocks base method.
func (m *MockRepositoryCache) GetUrl(ctx context.Context, shortenUrl string) (*entity.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", ctx, shortenUrl)
	ret0, _ := ret[0].(*entity.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockRepositoryCacheMockRecorder) GetUrl(ctx, shortenUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockRepositoryCache)(nil).GetUrl), ctx, shortenUrl)
}

// SaveShortenUrl mocks base method.
func (m *MockRepositoryCache) SaveShortenUrl(ctx context.Context, url *entity.Url) (*entity.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveShortenUrl", ctx, url)
	ret0, _ := ret[0].(*entity.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveShortenUrl indicates an expected call of SaveShortenUrl.
func (mr *MockRepositoryCacheMockRecorder) SaveShortenUrl(ctx, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveShortenUrl", reflect.TypeOf((*MockRepositoryCache)(nil).SaveShortenUrl), ctx, url)
}
